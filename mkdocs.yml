site_name: æternity Documentation Hub
nav:
    - Introduction: 'index.md'
    - Quick Glossary: 'quick_glossary.md'
    - Node:
        - Introduction: 'æternity/README.md'
        - Get Started:
            - Build in Windows: 'æternity/docs/build-windows.md'
            - Build in Ubuntu: 'æternity/docs/build.md'
            - Configuration: 'æternity/docs/configuration.md'
            - CUDA Miner: 'æternity/docs/cuda-miner.md'
            - Docker: 'æternity/docs/docker.md'
            - Installation in Windows: 'æternity/docs/installation-windows.md'
            - Installation in Ubuntu: 'æternity/docs/installation.md'
            - Operation: 'æternity/docs/operation.md'
    - Protocol:
        - Oracles:
            - Life Cycle: 'protocol/oracles/oracle_life_cycle.md'
            - State Tree: 'protocol/oracles/oracle_state_tree.md'
            - Transactions: 'protocol/oracles/oracle_transactions.md'
        - AENS Naming System: 'protocol/AENS.md'
        - Smart Contracts:
            - Contract Life Cycle Examples: 'protocol/contracts/contract_life_cycle.md'
            - Virtual Machines:
                - Æternity VM: 'protocol/contracts/contract_vms.md'
                - Æternity Ethereum VM: 'protocol/contracts/aevm.md'
            - Sophia Smart Contract Language: 'protocol/contracts/sophia.md'
            - Contract State Tree: 'protocol/contracts/contract_state_tree.md'
            - Contract Transactions: 'protocol/contracts/contract_transactions.md'
        - State Channels: 'protocol/channels/README.md'
        - Serialization Formats: 'protocol/serializations.md'
    - Aetmodel:
        - Threat Model: 'aetmodel/ThreatModel.md'
    - AEXs:
        - AEX1: 'AEXs/AEXS/aex-1.md'
        - AEX2: 'AEXs/AEXS/aex-2.md'
        - AEX3: 'AEXs/AEXS/aex-3.md'
        - AEX4: 'AEXs/AEXS/aex-4.md'
        - AEX5: 'AEXs/AEXS/aex-5.md'
        - AEX7: 'AEXs/AEXS/aex-7.md'
        - AEX9: 'AEXs/AEXS/aex-9.md'
        - AEX10: 'AEXs/AEXS/aex-10.md'
        - AEX-Draft: 'AEXs/AEXS/aex-draft_data_serialization.md'
    - Node Usage API:
        - Latest Stable Release:
            - Autogenerated æternity Node API Documentation: 'protocol/api-docs/README.md'
        - Encoding Scheme: 'protocol/node/api/api_encoding.md'
        - Account Managment: 'protocol/node/api/account_api_usage.md'
        - Spending Tokens: 'protocol/node/api/spend_api_usage.md'
        - Oracle: 'protocol/node/api/oracle_api_usage.md'
        - Naming System: 'protocol/node/api/naming_system_api_usage.md'
        - Contract: 'protocol/node/api/contract_api_usage.md'
        - Channels: 'protocol/node/api/channels_api_usage.md'
        - Mining: 'protocol/node/api/mining_api_usage.md'
    - Developer Tools:
        - æternity Framework:
            - AEproject: 'developer-tools/æternity-frameworks/aepp-aeproject-js/README.md'
        - Software Development Kits:
            - Go: 'developer-tools/sdks/aepp-sdk-go/README.md'
            - JavaScript: 'developer-tools/sdks/aepp-sdk-js/README.md'
            - Python: 'developer-tools/sdks/sdk-python/README.md'
            - Elixir: 'developer-tools/sdks/aepp-sdk-elixir/README.md'
            - Java: 'developer-tools/sdks/aepp-sdk-java/README.md'
        - Middleware: 'developer-tools/aepp-middleware/README.md'
        - Token Faucet: 'developer-tools/aepp-faucet/README.md'
        - Frameworks:
            - æpp Components: 'developer-tools/frameworks/aepp-components/README.md'
        - Contract Editor: 'developer-tools/aepp-contracts/README.md'
        - AirGap:
            - AirGap Coin Library: 'developer-tools/airgap/airgap-coin-lib/docs/README.md'
            - AirGap Vault: 'developer-tools/airgap/airgap-vault/README.md'
            - AirGap Wallet: 'developer-tools/airgap/airgap-wallet/README.md'
    #     - CLI Tools:
    #         - JavaScript
    #         - Stratum:
    #            - Library
    #         - Websocket
    #    - Online Test Tools:
    #         - Smart Contract Editor
    #         - Blockchain Explorer
    #         - Faucet
    #            - Token Faucet
    #            - æpp Faucet
    - Sophia Compiler:
        - aesophia: 'aesophia/README.md'
    - Sophia Libraries:
        - DateTime: 'aepp-sophia-examples/libraries/DateTime/README.md'
        - List: 'aepp-sophia-examples/libraries/List/README.md'
        - Ownable: 'aepp-sophia-examples/libraries/Ownable/README.md'
        - FungibleToken: 'aepp-sophia-examples/libraries/FungibleToken/README.md'
        - NonFungibleToken: 'aepp-sophia-examples/libraries/NonFungibleToken/README.md'
        - MultisignatureWallet: 'aepp-sophia-examples/libraries/MultisignatureWallet/README.md'
    - Sophia by Example:
        #- CryptoHamster: 'aepp-sophia-examples/examples/CryptoHamster/README.md'
        - Smart Data Provider: 'aepp-sophia-examples/examples/SmartDataProvider/README.md'
        - Smart Real Estate: 'aepp-sophia-examples/examples/SmartRealEstate/README.md'
        - Spend-to-Many: 'aepp-sophia-examples/examples/SpendToMany/README.md'
        - Tic Tac Toe: 'aepp-sophia-examples/examples/TicTacToe/README.md'
    - How-To Guides:
        - Account:
            - Create (in æ CLI): 'tutorials/account-creation-in-ae-cli.md'
        - Middleware:
            - Run Own Middleware: 'tutorials/running-your-own-ae-middleware.md'
        - Miner:
            - Run CPU Miner (Ubuntu): 'tutorials/run-cpu-miner-on-ubuntu-1804.md'
            - Run GPU Miner (Ubuntu): 'tutorials/run-gpu-miner-on-ubuntu-1804.md'
        - Node:
            - Run Node (MacOS): 'tutorials/run-node-on-macos-mojave.md'
            - Run Node (Ubuntu): 'tutorials/run-node-on-ubuntu-1804.md'
        - Paper Wallet:
            - Create (in æ CLI): 'tutorials/create-a-paper-wallet.md'
        - SDK:
            - Register and Update a Name with the SDK in JavaScript: 'tutorials/naming-workflow-in-javascript-sdk.md'
        - Smart Contract:
            - Install Sophia Notepad++ Language Definition: 'tutorials/sophia-language-definition-for-notepad++.md'
            - Deploy a Smart Contract on æternity with forgAE: 'tutorials/smart-contract-deployment-in-forgae.md'
            - Deploy a Smart Contract with init Parameters with forgAE: 'tutorials/deploy-with-init-params.md'
            - Call a Deployed Contract Using the CLI: 'tutorials/smart-contract-calling-in-ae-cli.md'
        - Testnet:
            - Run Local Testnet (Docker): 'tutorials/run-local-testnet-with-docker.md'
            - Get Testnet Tokens: 'tutorials/get-testnet-tokens.md'
        - Unit Tests:
            - How to Write Unit Test I: 'tutorials/how-to-write-unit-test-1.md'
            - How to Write Unit Test II: 'tutorials/how-to-write-unit-test-2.md'
    - Tutorials:
        - Oracles:
            - Sophia Oracle Introduction: 'tutorials/sophia-oracle-introduction.md'
        - Sophia:
            - Fungible Token Contract: 'tutorials/sophia-fungible-token-contract.md'
            - Token Exchange Contract I: 'tutorials/sophia-token-exchange-contract-1.md'
            - Token Exchange Contract II: 'tutorials/sophia-token-exchange-contract-2.md'
            - Token Exchange Contract III: 'tutorials/sophia-token-exchange-contract-3.md'
            - Vote Contract: 'tutorials/vote-contract.md'
        - State Channels:
            - Introduction: 'tutorials/state-channels-introduction.md'
        - To-Do List æpp:
            - How to Build a To-Do List æpp - Part I: 'tutorials/build-to-do-list-aepp-1.md'
            - How to Build a To-Do List æpp - Part II: 'tutorials/build-to-do-list-aepp-2.md'
extra_css: [site/assets/extra.css]
theme:
  name: 'material'
  palette:
    primary: 'pink'
    accent: 'white'
  font:
    text: 'Roboto'
    code: 'Roboto Mono'

repo_name: 'aeternity/documentation-hub'
repo_url: 'https://github.com/aeternity/documentation-hub'
